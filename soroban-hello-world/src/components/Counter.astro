<strong>Incrementor</strong><br />
Current value: <strong id="current-value" aria-live="polite">???</strong><br />
<br />
<button data-current-value aria-controls="current-value">Current Value</button>
<button data-increment aria-controls="current-value">Increment</button>
<button data-decrement aria-controls="current-value">Decrement</button>
<button data-reset aria-controls="current-value">Reset</button>

<script>
  import { kit, loadedPublicKey } from "../stellar-wallets-kit";
  import incrementor from "../contracts/soroban_increment_contract";
  const button = document.querySelector("[data-increment]");
  const currentValue = document.querySelector("#current-value");

  button.addEventListener("click", async () => {
    const publicKey = loadedPublicKey();

    if (!publicKey) {
      alert("Please connect your wallet first");
      return;
    } else {
      incrementor.options.publicKey = publicKey;
    }

    button.disabled = true;
    button.classList.add("loading");
    currentValue.innerHTML =
      currentValue.innerHTML +
      '<span class="visually-hidden"> – updating…</span>';

    const tx = await incrementor.increment();

    try {
      const { result } = await tx.signAndSend({
        signTransaction: async (xdr) => {
          const { signedTxXdr } = await kit.signTransaction(xdr);
          return signedTxXdr;
        },
      });

      // Only use `innerHTML` with contract values you trust!
      // Blindly using values from an untrusted contract opens your users to script injection attacks!
      currentValue.innerHTML = result.toString();
    } catch (e) {
      console.error(e);
    }

    button.disabled = false;
    button.classList.remove("loading");
  });
</script>